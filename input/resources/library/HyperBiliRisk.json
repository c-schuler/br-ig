{
  "resourceType": "Library",
  "id": "HyperBiliRisk",
  "contained": [ {
    "resourceType": "Parameters",
    "id": "options",
    "parameter": [ {
      "name": "translatorVersion",
      "valueString": "3.22.0"
    }, {
      "name": "option",
      "valueString": "EnableAnnotations"
    }, {
      "name": "option",
      "valueString": "EnableLocators"
    }, {
      "name": "option",
      "valueString": "DisableListDemotion"
    }, {
      "name": "option",
      "valueString": "DisableListPromotion"
    }, {
      "name": "format",
      "valueString": "XML"
    }, {
      "name": "analyzeDataRequirements",
      "valueBoolean": false
    }, {
      "name": "collapseDataRequirements",
      "valueBoolean": false
    }, {
      "name": "compatibilityLevel",
      "valueString": "1.5"
    }, {
      "name": "enableCqlOnly",
      "valueBoolean": false
    }, {
      "name": "errorLevel",
      "valueString": "Info"
    }, {
      "name": "signatureLevel",
      "valueString": "Overloads"
    }, {
      "name": "validateUnits",
      "valueBoolean": true
    }, {
      "name": "verifyOnly",
      "valueBoolean": false
    } ]
  } ],
  "extension": [ {
    "url": "http://hl7.org/fhir/StructureDefinition/cqf-cqlOptions",
    "valueReference": {
      "reference": "#options"
    }
  } ],
  "url": "http://fhir.org/guides/example/bilirubin/Library/HyperBiliRisk",
  "version": "1.0",
  "name": "HyperBiliRisk",
  "type": {
    "coding": [ {
      "system": "http://terminology.hl7.org/CodeSystem/library-type",
      "code": "logic-library"
    } ]
  },
  "relatedArtifact": [ {
    "type": "depends-on",
    "display": "FHIR model information",
    "resource": "http://fhir.org/guides/cqf/common/Library/FHIR-ModelInfo|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Library FHIRHelpers",
    "resource": "http://fhir.org/guides/example/bilirubin/Library/FHIRHelpers|4.0.1"
  }, {
    "type": "depends-on",
    "display": "Code system LOINC",
    "resource": "http://loinc.org"
  } ],
  "parameter": [ {
    "name": "Patient",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Patient"
  }, {
    "name": "TotalBiliObs",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "LatestTotalBili",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "Baby Age in Hours",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "integer"
  }, {
    "name": "Gestational Age in Weeks",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Quantity"
  }, {
    "name": "Phototherapy Threshold",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "decimal"
  }, {
    "name": "Is Guidance Recommended?",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "boolean"
  }, {
    "name": "Bilirubin Above Threshold",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "decimal"
  }, {
    "name": "Detailed Summary",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "Determine Score",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "string"
  }, {
    "name": "DirectBiliObs",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "IndirectBiliObs",
    "use": "out",
    "min": 0,
    "max": "*",
    "type": "Observation"
  }, {
    "name": "LatestDirectBili",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  }, {
    "name": "LatestIndirectBili",
    "use": "out",
    "min": 0,
    "max": "1",
    "type": "Observation"
  } ],
  "dataRequirement": [ {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value" ],
    "codeFilter": [ {
      "path": "code"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value" ],
    "codeFilter": [ {
      "path": "code"
    } ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "mustSupport": [ "url", "value" ]
  }, {
    "type": "Patient",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Patient" ],
    "mustSupport": [ "url", "value" ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value" ],
    "codeFilter": [ {
      "path": "code"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value" ],
    "codeFilter": [ {
      "path": "code"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value" ],
    "codeFilter": [ {
      "path": "code"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value" ],
    "codeFilter": [ {
      "path": "code"
    } ]
  }, {
    "type": "Observation",
    "profile": [ "http://hl7.org/fhir/StructureDefinition/Observation" ],
    "mustSupport": [ "code", "status", "value" ],
    "codeFilter": [ {
      "path": "code"
    } ]
  } ],
  "content": [ {
    "contentType": "text/cql",
    "data": "bGlicmFyeSAiSHlwZXJCaWxpUmlzayIgdmVyc2lvbiAnMS4wJwoKdXNpbmcgRkhJUiB2ZXJzaW9uICc0LjAuMScKCmluY2x1ZGUgRkhJUkhlbHBlcnMgdmVyc2lvbiAnNC4wLjEnIGNhbGxlZCBGSElSSGVscGVycwoKY29kZXN5c3RlbSAiTE9JTkMiOiAnaHR0cDovL2xvaW5jLm9yZycKY29kZSAiVG90YWwgYmlsaXJ1YmluIjogJzE5NzUtMicgZnJvbSAiTE9JTkMiIGRpc3BsYXkgJ0JpbGlydWJpbi50b3RhbCBbTWFzcy92b2x1bWVdIGluIFNlcnVtIG9yIFBsYXNtYScKY29kZSAiRGlyZWN0IGJpbGlydWJpbiI6ICcxOTY4LTcnIGZyb20gIkxPSU5DIiBkaXNwbGF5ICdCaWxpcnViaW4uZGlyZWN0IFtNYXNzL3ZvbHVtZV0gaW4gU2VydW0gb3IgUGxhc21hJwpjb2RlICJJbmRpcmVjdCBiaWxpcnViaW4iOiAnMTk3MS0xJyBmcm9tICJMT0lOQyIgZGlzcGxheSAnQmlsaXJ1YmluLmluZGlyZWN0IFtNYXNzL3ZvbHVtZV0gaW4gU2VydW0gb3IgUGxhc21hJwpjb2RlICJUY0IgKHNraW4pIGJpbGlydWJpbiI6ICc1ODk0MS02JyBmcm9tICJMT0lOQyIgZGlzcGxheSAnQmlsaXJ1YmluIFtNYXNzL3ZvbHVtZV0gaW4gU2tpbicKY29kZSAiR2VzdGF0aW9uYWwgYWdlIjogJzExODg0LTQnIGZyb20gIkxPSU5DIiBkaXNwbGF5ICdHZXN0YXRpb25hbCBhZ2UgRXN0aW1hdGVkJwoKY29udGV4dCBQYXRpZW50CgpkZWZpbmUgIkJhYnkgQWdlIGluIEhvdXJzIjoKICBGaXJzdCgKICAgIChQYXRpZW50LmV4dGVuc2lvbiBleHQgd2hlcmUgZXh0LnVybCA9ICdodHRwOi8vaGw3Lm9yZy9maGlyL1N0cnVjdHVyZURlZmluaXRpb24vcGF0aWVudC1iaXJ0aFRpbWUnKSBiaXJ0aERhdGVUaW1lCiAgICAgIHJldHVybiBkaWZmZXJlbmNlIGluIGhvdXJzIGJldHdlZW4gRkhJUkhlbHBlcnMuVG9EYXRlVGltZShiaXJ0aERhdGVUaW1lLnZhbHVlIGFzIEZISVIuZGF0ZVRpbWUpIGFuZCBGSElSSGVscGVycy5Ub0RhdGVUaW1lKExhdGVzdFRvdGFsQmlsaS5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkKICApCgpkZWZpbmUgIkdlc3RhdGlvbmFsIEFnZSBpbiBXZWVrcyI6CiAgRmlyc3QoW09ic2VydmF0aW9uOiBjb2RlIGluIHsgIkdlc3RhdGlvbmFsIGFnZSIgfV0gTwogICAgd2hlcmUgTy5zdGF0dXMgaW4geyAnZmluYWwnLCAnYW1lbmRlZCcsICdjb3JyZWN0ZWQnIH0KICAgICAgYW5kIE8udmFsdWUgaXMgUXVhbnRpdHkKICAgIHNvcnQgYnkgZWZmZWN0aXZlIGRlc2MKICApLnZhbHVlIGFzIFF1YW50aXR5CgpkZWZpbmUgIlBob3RvdGhlcmFweSBUaHJlc2hvbGQiOgogIGNhc2UKICAgIHdoZW4gIkdlc3RhdGlvbmFsIEFnZSBpbiBXZWVrcyIudmFsdWUgPCAzNSB0aGVuIG51bGwKICAgIGVsc2UKICAgICAgY2FzZQogICAgICAgIHdoZW4gIkJhYnkgQWdlIGluIEhvdXJzIiA8IDk2IHRoZW4gKDAuMTI1ICogIkJhYnkgQWdlIGluIEhvdXJzIikgKyAoNSArICgwLjUgKiAoIkdlc3RhdGlvbmFsIEFnZSBpbiBXZWVrcyIudmFsdWUgLSAzNSkpKQogICAgICAgIGVsc2UgMTcgKyAoMC41ICogKCJHZXN0YXRpb25hbCBBZ2UgaW4gV2Vla3MiLnZhbHVlIC0gMzUpKQogICAgICBlbmQKICBlbmQKCmRlZmluZSAiSXMgR3VpZGFuY2UgUmVjb21tZW5kZWQ/IjoKICAiUGhvdG90aGVyYXB5IFRocmVzaG9sZCIgaXMgbm90IG51bGwgYW5kIChMYXRlc3RUb3RhbEJpbGkudmFsdWUgYXMgUXVhbnRpdHkpLnZhbHVlID4gIlBob3RvdGhlcmFweSBUaHJlc2hvbGQiCgpkZWZpbmUgIkJpbGlydWJpbiBBYm92ZSBUaHJlc2hvbGQiOgogIChMYXRlc3RUb3RhbEJpbGkudmFsdWUgYXMgUXVhbnRpdHkpLnZhbHVlIC0gIlBob3RvdGhlcmFweSBUaHJlc2hvbGQiCgpkZWZpbmUgIkRldGFpbGVkIFN1bW1hcnkiOgogIGNhc2UKICAgIHdoZW4gIkdlc3RhdGlvbmFsIEFnZSBpbiBXZWVrcyIudmFsdWUgPCAzNSB0aGVuICdHdWlkYW5jZSBub3QgYXBwbGljYWJsZSBmb3IgPDM1IHdlZWtzIGdlc3RhdGlvbicKICAgIHdoZW4gIklzIEd1aWRhbmNlIFJlY29tbWVuZGVkPyIgdGhlbgogICAgICAnUGhvdG90aGVyYXB5IHJlY29tbWVuZGVkIC0gQmlsaXJ1YmluOiAnICsgVG9TdHJpbmcoKExhdGVzdFRvdGFsQmlsaS52YWx1ZSBhcyBRdWFudGl0eSkudmFsdWUpICsKICAgICAgJyBtZy9kTCAodGhyZXNob2xkOiAnICsgVG9TdHJpbmcoIlBob3RvdGhlcmFweSBUaHJlc2hvbGQiKSArCiAgICAgICcgbWcvZEwsICcgKyBUb1N0cmluZygiQmlsaXJ1YmluIEFib3ZlIFRocmVzaG9sZCIpICsgJyBtZy9kTCBhYm92ZSB0aHJlc2hvbGQpJwogICAgZWxzZQogICAgICAnTm8gcGhvdG90aGVyYXB5IG5lZWRlZCAtIEJpbGlydWJpbjogJyArIFRvU3RyaW5nKChMYXRlc3RUb3RhbEJpbGkudmFsdWUgYXMgUXVhbnRpdHkpLnZhbHVlKSArCiAgICAgICcgbWcvZEwgKHRocmVzaG9sZDogJyArIFRvU3RyaW5nKCJQaG90b3RoZXJhcHkgVGhyZXNob2xkIikgKyAnIG1nL2RMKScKICBlbmQKCmRlZmluZSAiRGV0ZXJtaW5lIFNjb3JlIjoKICBjYXNlCiAgICB3aGVuICJHZXN0YXRpb25hbCBBZ2UgaW4gV2Vla3MiLnZhbHVlIDwgMzUgdGhlbiAnZ3VpZGFuY2Ugbm90IGFwcGxpY2FibGUgZm9yIDwzNSB3ZWVrcyBnZXN0YXRpb24nCiAgICB3aGVuICJJcyBHdWlkYW5jZSBSZWNvbW1lbmRlZD8iIHRoZW4gJ3Bob3RvdGhlcmFweSByZWNvbW1lbmRlZCcKICAgIGVsc2UgJ25vIHNwZWNpZmljIHJlY29tbWVuZGF0aW9uJwogIGVuZAoKZGVmaW5lIFRvdGFsQmlsaU9iczoKICBbT2JzZXJ2YXRpb246IGNvZGUgaW4geyAiVG90YWwgYmlsaXJ1YmluIiB9XSBPCiAgICB3aGVyZSBPLnN0YXR1cyBpbiB7ICdmaW5hbCcsICdhbWVuZGVkJywgJ2NvcnJlY3RlZCcgfQogICAgICBhbmQgTy52YWx1ZSBpcyBRdWFudGl0eQoKZGVmaW5lIERpcmVjdEJpbGlPYnM6CiAgW09ic2VydmF0aW9uOiBjb2RlIGluIHsgIkRpcmVjdCBiaWxpcnViaW4iIH1dIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIFF1YW50aXR5CgpkZWZpbmUgSW5kaXJlY3RCaWxpT2JzOgogIFtPYnNlcnZhdGlvbjogY29kZSBpbiB7ICJJbmRpcmVjdCBiaWxpcnViaW4iIH1dIE8KICAgIHdoZXJlIE8uc3RhdHVzIGluIHsgJ2ZpbmFsJywgJ2FtZW5kZWQnLCAnY29ycmVjdGVkJyB9CiAgICAgIGFuZCBPLnZhbHVlIGlzIFF1YW50aXR5CgpkZWZpbmUgTGF0ZXN0VG90YWxCaWxpOiBGaXJzdCggVG90YWxCaWxpT2JzIE8gc29ydCBieSBlZmZlY3RpdmUgZGVzYyApCmRlZmluZSBMYXRlc3REaXJlY3RCaWxpOiBGaXJzdCggRGlyZWN0QmlsaU9icyBPIHNvcnQgYnkgZWZmZWN0aXZlIGRlc2MgKQpkZWZpbmUgTGF0ZXN0SW5kaXJlY3RCaWxpOiBGaXJzdCggSW5kaXJlY3RCaWxpT2JzIE8gc29ydCBieSBlZmZlY3RpdmUgZGVzYyAp"
  }, {
    "contentType": "application/elm+xml",
    "data": ""
  } ]
}